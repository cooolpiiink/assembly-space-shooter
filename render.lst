Microsoft (R) Macro Assembler Version 6.14.8444		    03/13/14 22:44:33
render.asm						     Page 1 - 1


				; #########################################################################
				;
				;   render.asm - Assembly file for EECS205 Assignment 4/5
				;
				;
				; #########################################################################

				      .586
				      .MODEL FLAT,STDCALL
				      .STACK 4096
				      option casemap :none  ; case sensitive

				    include stars.inc		
			      C ; #########################################################################
			      C ;
			      C ;   stars.inc - Includes for EECS205 Assignment 1
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C 
			      C DrawStarReg PROTO STDCALL ; Renders a star in the 2D drawing space
			      C                         ; Uses register passed parameters:
			      C                         ;      esi = x-coordinate
			      C                         ;      edi = y-coordinate
			      C 
			      C DrawAllStars PROTO STDCALL ; Routine which uses DrawStarReg to create all the stars
			      C 
			      C EXTERNDEF STDCALL WinMain : NEAR
			      C 
				    include blit.inc
			      C ; #########################################################################
			      C ;
			      C ;   blit.inc - Includes for EECS205 Assignment 2
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C 
 00000010		      C _EECS205BITMAP STRUCT
 00000000  00000000	      C  dwWidth      DWORD  ?
 00000004  00000000	      C  dwHeight     DWORD  ?
 00000008  00		      C  bTransparent BYTE   ?
 00000009  00000003 [	      C               BYTE   3 DUP(?)
	    00
	   ]
 0000000C  00000000	      C  lpBytes      DWORD  ?
			      C _EECS205BITMAP ENDS
			      C 
			      C EECS205BITMAP TYPEDEF _EECS205BITMAP
			      C 
			      C EXTERNDEF StarBitmap:EECS205BITMAP
			      C EXTERNDEF dwPitch:DWORD
			      C EXTERNDEF lpDisplayBits:DWORD
			      C 
			      C 
			      C BlitReg PROTO STDCALL   ; Renders a bitmap to the 2D drawing space
			      C                         ; Uses register passed parameters:
			      C                         ;      esi = x-coordinate (of image center)
			      C                         ;      edi = y-coordinate (of image center)
			      C 			;      edx = pointer to the bitmap to draw
			      C 
			      C 
			      C 
				    include trig.inc
			      C ; #########################################################################
			      C ;
			      C ;   trig.inc - Includes for EECS205 Assignment 3
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C ;; FIXED is a fixed point number (16 bit integer and 16 bit fractional components)
			      C ;;    To convert a FIXED value in eax into an integer:  sar eax, 16
			      C ;;    To convert an integer value in eax into a FIXED:  shl eax, 16
			      C FIXED TYPEDEF DWORD
			      C 
			      C EXTERNDEF SINTAB:WORD 
			      C 
			      C FixedSin PROTO STDCALL dwAngle:FIXED 
			      C FixedCos PROTO STDCALL dwAngle:FIXED
			      C 
			      C 
			      C 
			      C 
			      C 
				    include rotate.inc	
			      C ; #########################################################################
			      C ;
			      C ;   rotate.inc - Includes for EECS205 Assignment 3
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C include blit.inc
			      C ; #########################################################################
			      C ;
			      C ;   blit.inc - Includes for EECS205 Assignment 2
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C 
			      C _EECS205BITMAP STRUCT
			      C  dwWidth      DWORD  ?
			      C  dwHeight     DWORD  ?
			      C  bTransparent BYTE   ?
			      C               BYTE   3 DUP(?)
			      C  lpBytes      DWORD  ?
			      C _EECS205BITMAP ENDS
			      C 
			      C EECS205BITMAP TYPEDEF _EECS205BITMAP
			      C 
			      C EXTERNDEF StarBitmap:EECS205BITMAP
			      C EXTERNDEF dwPitch:DWORD
			      C EXTERNDEF lpDisplayBits:DWORD
			      C 
			      C 
			      C BlitReg PROTO STDCALL   ; Renders a bitmap to the 2D drawing space
			      C                         ; Uses register passed parameters:
			      C                         ;      esi = x-coordinate (of image center)
			      C                         ;      edi = y-coordinate (of image center)
			      C 			;      edx = pointer to the bitmap to draw
			      C 
			      C 
			      C 
			      C 
			      C BasicBlit PROTO STDCALL lpBmp:PTR EECS205BITMAP, xcenter:DWORD, ycenter:DWORD
			      C 
			      C RotateBlit PROTO STDCALL lpBmp:PTR EECS205BITMAP, xcenter:DWORD, ycenter:DWORD, angle:DWORD
			      C 
			      C FixedMult PROTO val1:FIXED, val2:FIXED
			      C 
				    include game.inc
			      C ; #########################################################################
			      C ;
			      C ;   game.inc - Includes for EECS205 Assignment 4/5
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C ;; These are library routines that you will call (but do NOT have to implement)
			      C BeginDraw PROTO
			      C EndDraw PROTO
			      C 
			      C ;; You should not need to modify these prototypes (actually, it would probably be bad)
			      C GameInit PROTO
			      C GameMain PROTO mouseStatus:DWORD, keyDown:DWORD, keyUp:DWORD
			      C 
			      C ;; Useful Library Routines
			      C DrawString PROTO x:DWORD, y:DWORD, string:PTR BYTE 
			      C DrawInt PROTO x:DWORD, y:DWORD, value:DWORD
			      C 
			      C ;; Feel free to modify the following
			      C GameRender PROTO
			      C GameLogic PROTO key:DWORD, ship1:DWORD, ship2:DWORD, ship3:DWORD, exp:DWORD, a1:DWORD, a3:DWORD, cage:DWORD
			      C 
			      C EXTERNDEF lpTyroneBmp : DWORD
			      C 
 00000018		      C _SPRITE STRUCT
 00000000  00000000	      C 	x DWORD ?
 00000004  00000000	      C 	y DWORD ?
 00000008  00000000	      C 	a DWORD ?
 0000000C  00000001	      C 	alive DWORD 1
 00000010  00000001	      C 	visible DWORD 1
 00000014  00000000	      C 	bmpPtr DWORD ?
			      C _SPRITE ENDS
			      C 
			      C SPRITE TYPEDEF _SPRITE
			      C 
			      C EXTERNDEF asteroid1:SPRITE
			      C EXTERNDEF asteroid2:SPRITE
			      C EXTERNDEF asteroid3:SPRITE
			      C EXTERNDEF cage1:SPRITE
			      C EXTERNDEF cage2:SPRITE
			      C EXTERNDEF ship:SPRITE
			      C EXTERNDEF projectile:SPRITE
			      C EXTERNDEF shot:DWORD
			      C EXTERNDEF over:DWORD
			      C EXTERNDEF num_loops:DWORD
			      C 


 00000000			.DATA
 00000000 47 61 6D 65 20	overString BYTE "Game Over. You Lost",0
	   4F 76 65 72 2E
	   20 59 6F 75 20
	   4C 6F 73 74 00
					
 00000000			.CODE

				;; Define the function GameRender

 00000000			GameRender PROC 
					
					INVOKE BeginDraw

					INVOKE DrawAllStars

 0000000A  83 3D 00000000 E		cmp over, 1
	   01
 00000011  75 19			jne a1
					INVOKE DrawString, 250, 200, offset overString
 00000027  E9 0000012E			jmp done

 0000002C			a1:	
 0000002C  83 3D 00000004 E		cmp asteroid1.y, 0
	   00
 00000033  7C 26			jl a2
 00000035  83 3D 00000010 E		cmp asteroid1.visible, 0
	   00
 0000003C  74 1D			je a2
					INVOKE RotateBlit, asteroid1.bmpPtr, asteroid1.x, asteroid1.y, asteroid1.a
 0000005B			a2:	
 0000005B  83 3D 00000004 E		cmp asteroid2.y, 0
	   00
 00000062  7C 26			jl a3
 00000064  83 3D 00000010 E		cmp asteroid2.visible, 0
	   00
 0000006B  74 1D			je a3
					INVOKE RotateBlit, asteroid2.bmpPtr, asteroid2.x, asteroid2.y, asteroid2.a
 0000008A			a3:
 0000008A  83 3D 00000004 E		cmp asteroid3.y, 0
	   00
 00000091  7C 26			jl c1
 00000093  83 3D 00000010 E		cmp asteroid3.visible, 0
	   00
 0000009A  74 1D			je c1
					INVOKE RotateBlit, asteroid3.bmpPtr, asteroid3.x, asteroid3.y, asteroid3.a
 000000B9			c1:
 000000B9  83 3D 00000004 E		cmp cage1.y, 0
	   00
 000000C0  7C 26			jl c2
 000000C2  83 3D 00000010 E		cmp cage1.visible, 0
	   00
 000000C9  74 1D			je c2
					INVOKE RotateBlit, cage1.bmpPtr, cage1.x, cage1.y, cage1.a
 000000E8			c2:
 000000E8  83 3D 00000004 E		cmp cage2.y, 0
	   00
 000000EF  7C 26			jl drawShip
 000000F1  83 3D 00000010 E		cmp cage2.visible, 0
	   00
 000000F8  74 1D			je drawShip
					INVOKE RotateBlit, cage2.bmpPtr, cage2.x, cage2.y, cage2.a
 00000117			drawShip:	
					INVOKE RotateBlit, ship.bmpPtr, ship.x, ship.y, ship.a
 00000134  83 3D 00000000 E		cmp shot, 0
	   00
 0000013B  74 1D			je done
 0000013D			drawProjectile:	
					INVOKE RotateBlit, projectile.bmpPtr, projectile.x, projectile.y, projectile.a
					
 0000015A			done:	
					INVOKE EndDraw

 0000015F  C3			ret
 00000160			GameRender ENDP


				END
Microsoft (R) Macro Assembler Version 6.14.8444		    03/13/14 22:44:33
render.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

_EECS205BITMAP . . . . . . . . .	 00000010
  dwWidth  . . . . . . . . . . .	 00000000	 DWord
  dwHeight . . . . . . . . . . .	 00000004	 DWord
  bTransparent . . . . . . . . .	 00000008	 Byte
  lpBytes  . . . . . . . . . . .	 0000000C	 DWord
_SPRITE  . . . . . . . . . . . .	 00000018
  x  . . . . . . . . . . . . . .	 00000000	 DWord
  y  . . . . . . . . . . . . . .	 00000004	 DWord
  a  . . . . . . . . . . . . . .	 00000008	 DWord
  alive  . . . . . . . . . . . .	 0000000C	 DWord
  visible  . . . . . . . . . . .	 00000010	 DWord
  bmpPtr . . . . . . . . . . . .	 00000014	 DWord


Types:

                N a m e                  Size     Attr

EECS205BITMAP  . . . . . . . . .	 00000010     _EECS205BITMAP 
FIXED  . . . . . . . . . . . . .	 00000004     DWord 
SPRITE . . . . . . . . . . . . .	 00000018     _SPRITE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000014 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000160 Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

BasicBlit  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BeginDraw  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BlitReg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawAllStars . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawStarReg  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EndDraw  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FixedCos . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FixedMult  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FixedSin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameInit . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameLogic  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameMain . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameRender . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000160 Public STDCALL
  a1 . . . . . . . . . . . . . .	L Near	 0000002C _TEXT	
  a2 . . . . . . . . . . . . . .	L Near	 0000005B _TEXT	
  a3 . . . . . . . . . . . . . .	L Near	 0000008A _TEXT	
  c1 . . . . . . . . . . . . . .	L Near	 000000B9 _TEXT	
  c2 . . . . . . . . . . . . . .	L Near	 000000E8 _TEXT	
  drawShip . . . . . . . . . . .	L Near	 00000117 _TEXT	
  drawProjectile . . . . . . . .	L Near	 0000013D _TEXT	
  done . . . . . . . . . . . . .	L Near	 0000015A _TEXT	
RotateBlit . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
SINTAB . . . . . . . . . . . . .	Word	 00000000 FLAT	External STDCALL
StarBitmap . . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
WinMain  . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
asteroid1  . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
asteroid2  . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
asteroid3  . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
cage1  . . . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
cage2  . . . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
dwPitch  . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
lpDisplayBits  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
lpTyroneBmp  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
num_loops  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
overString . . . . . . . . . . .	Byte	 00000000 _DATA	
over . . . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
projectile . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
ship . . . . . . . . . . . . . .	_SPRITE	 00000000 FLAT	External STDCALL
shot . . . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL

	   0 Warnings
	   0 Errors
